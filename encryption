#include <iostream>
#include <string>
#include <vector>
#include <cmath>
#include <algorithm>

std::string encryption(std::string s) {
    // Remove spaces from the input string
    s.erase(std::remove(s.begin(), s.end(), ' '), s.end());

    int L = s.length();
    int rows = floor(sqrt(L));
    int cols = ceil(sqrt(L));

    // Adjust rows if the grid is too small to fit all characters
    if (rows * cols < L) {
        rows = cols; 
    }

    // Create a vector of strings to represent the columns
    std::vector<std::string> encrypted_columns(cols);

    // Populate the columns
    for (int i = 0; i < L; ++i) {
        encrypted_columns[i % cols] += s[i];
    }

    // Join the columns with spaces to form the final encrypted string
    std::string result = "";
    for (int i = 0; i < cols; ++i) {
        result += encrypted_columns[i];
        if (i < cols - 1) {
            result += " ";
        }
    }

    return result;
}

int main() {
    std::string s;
    std::getline(std::cin, s); // Read the entire line including spaces

    std::string result = encryption(s);
    std::cout << result << std::endl;

    return 0;
}
