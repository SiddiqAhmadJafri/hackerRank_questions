#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int n, k;
    if (!(cin >> n >> k)) return 0;
    vector<int> a(n);
    for (int i = 0; i < n; ++i) cin >> a[i];

    int ans = 0;
    int i = 0; // first uncovered city
    while (i < n) {
        // farthest position we can try to place a plant to cover city i
        int right = min(n - 1, i + k - 1);
        int left  = max(0, i - (k - 1));
        
        int chosen = -1;
        // search from right down to left for a usable plant
        for (int j = right; j >= left; --j) {
            if (a[j] == 1) { chosen = j; break; }
        }
        if (chosen == -1) { // no plant can cover city i
            cout << -1 << '\n';
            return 0;
        }
        ++ans;
        // next uncovered city is just after chosen's coverage
        i = chosen + k;
    }

    cout << ans << '\n';
    return 0;
}
